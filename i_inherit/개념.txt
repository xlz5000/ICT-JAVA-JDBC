상속관계

<개발시>
1- 부모클래스의 멤버 접근 가능
2- 부모클래스의 없는 기능 추가해서 사용
3- 부모클래스에 있지만 재정의(수정) 사용

	==> overriding
	
	[*] 오버라이딩
		` 부모클래스의 메소드명과 동일
		` 인자도 동일
		` 리턴값도 동일
		` 자식의 접근지정다는 같거나 크거나
			private < default < protected < public
		
	[*] 오버로딩(overloading)
		` 메소드명이 동일
		` 인자가 달라야 함

<설계시>

-클래스의 공통점을 부모클래스로 설계
-자식클래스는 고유한 기능 보유